<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.javaguides.orderservice.config.WebClientConfig"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.web.reactive.function.client.WebClient"/>
    <fullyQualifiedTypeName name="java.lang.Boolean"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="com.javaguides.inventoryservice.model.Inventory"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.web.util.UriBuilder"/>
    <fullyQualifiedTypeName name="java.util.stream.Stream"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="com.javaguides.orderservice.dto.InventoryResponse"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
    <fullyQualifiedTypeName name="org.springframework.web.reactive.function.client.WebClient.Builder"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.SpringBootApplication"/>
    <fullyQualifiedTypeName name="org.springframework.boot.SpringApplication"/>
    <fullyQualifiedTypeName name="com.javaguides.inventoryservice.dto.InventoryResponse"/>
    <fullyQualifiedTypeName name="com.javaguides.inventoryservice.service.InventoryService"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.server.SecurityWebFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.web.server.ServerHttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.web.server.ServerHttpSecurity.OAuth2ResourceServerSpec"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.NoOpPasswordEncoder"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="com.javaguides.notificationservice.OrderPlacedEvent"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListener"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.ComponentScan"/>
</qualifiedTypeNameHistroy>
